/* Generated By:JavaCC: Do not edit this line. EpQueryParserImplConstants.java */
package com.elasticpath.ql.parser.gen;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings({"cast", "classfile", "deprecation", "dep-ann", "divzero",
					"empty", "fallthrough", "finally", "options", "overrides",
					"path", "processing", "rawtypes", "serial", "static",
					"try", "unchecked", "varargs", "PMD"}) public interface EpQueryParserImplConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 5;
  /** RegularExpression Id. */
  int OR = 6;
  /** RegularExpression Id. */
  int NOT = 7;
  /** RegularExpression Id. */
  int FIND = 8;
  /** RegularExpression Id. */
  int UID = 9;
  /** RegularExpression Id. */
  int GUID = 10;
  /** RegularExpression Id. */
  int WHERE = 11;
  /** RegularExpression Id. */
  int LIMIT = 12;
  /** RegularExpression Id. */
  int START = 13;
  /** RegularExpression Id. */
  int EQ = 14;
  /** RegularExpression Id. */
  int NOT_EQ = 15;
  /** RegularExpression Id. */
  int LESS_EQ = 16;
  /** RegularExpression Id. */
  int LESS = 17;
  /** RegularExpression Id. */
  int MORE_EQ = 18;
  /** RegularExpression Id. */
  int MORE_ = 19;
  /** RegularExpression Id. */
  int QUOTED = 20;
  /** RegularExpression Id. */
  int ATTR_NAME = 21;
  /** RegularExpression Id. */
  int LCURLY = 22;
  /** RegularExpression Id. */
  int RCURLY = 23;
  /** RegularExpression Id. */
  int LROUND = 24;
  /** RegularExpression Id. */
  int RROUND = 25;
  /** RegularExpression Id. */
  int LSQUARE = 26;
  /** RegularExpression Id. */
  int RSQUARE = 27;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 28;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 29;
  /** RegularExpression Id. */
  int BOOLEAN_LITERAL = 30;
  /** RegularExpression Id. */
  int TERM_CHAR = 31;
  /** RegularExpression Id. */
  int TERM = 32;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<AND>",
    "<OR>",
    "\"NOT\"",
    "\"FIND\"",
    "\"UID\"",
    "\"GUID\"",
    "\"WHERE\"",
    "\"LIMIT\"",
    "\"START\"",
    "\"=\"",
    "\"!=\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "<QUOTED>",
    "<ATTR_NAME>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<DECIMAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<BOOLEAN_LITERAL>",
    "<TERM_CHAR>",
    "<TERM>",
  };

}
