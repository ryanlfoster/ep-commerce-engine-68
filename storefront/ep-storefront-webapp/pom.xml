<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.elasticpath</groupId>
		<artifactId>storefront</artifactId>
		<version>6.8.0.2013101613-RELEASE</version>
	</parent>

	<artifactId>ep-storefront-webapp</artifactId>
	<packaging>war</packaging>
	<name>Example Storefront Webapp</name>
	<description>Elastic Path Example Storefront Web Application</description>

	<dependencies>
		<dependency>
			<groupId>com.elasticpath</groupId>
			<artifactId>ep-storefront</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--jaxb-impl is included due to jboss failing to load content wrappers RE-421-->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.5</version>
		</dependency>
	</dependencies>

	<properties>
		<m2eclipse.wtp.contextRoot>${ep.storefront.contextUrl}</m2eclipse.wtp.contextRoot>

		<!-- These archetype properties have to be outside the with-archetypes profile to be overridden by the build-server profile. -->
		<archetype-goal>install</archetype-goal>
		<archetype-invoker-build-server-profile-1 />
		<archetype-invoker-build-server-profile-2 />
		<archetype-invoker-snapshot-repository-id>cannot be blank</archetype-invoker-snapshot-repository-id> <!-- See http://jira.codehaus.org/browse/MINVOKER-118 -->
		<archetype-invoker-release-repository-id>cannot be blank</archetype-invoker-release-repository-id> <!-- See http://jira.codehaus.org/browse/MINVOKER-118 -->
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<configuration>
						<path>${ep.storefront.contextUrl}</path>
						<port>${ep.storefront.tomcat.port.http}</port>
						<httpsPort>${ep.storefront.tomcat.port.https}</httpsPort>
						<contextFile>${project.build.directory}/tomcatconf/context.xml</contextFile>
						<keystoreFile>${project.build.directory}/tomcatconf/keystore</keystoreFile>
						<keystorePass>changeit</keystorePass>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>${epdb.maven.groupId}</groupId>
							<artifactId>${epdb.maven.artifactId}</artifactId>
							<version>${epdb.maven.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<webResources>
							<resource>
								<directory>src/main/webapp</directory>
								<filtering>true</filtering>
								<includes>
									<include>**/log4j.properties</include>
									<include>WEB-INF/jboss-classloading.xml</include>
									<include>WEB-INF/jboss-web.xml</include>
									<include>WEB-INF/weblogic.xml</include>
								</includes>
							</resource>
							<resource>
								<directory>src/main/webapp</directory>
								<filtering>false</filtering>
								<excludes>
									<exclude>**/log4j.properties</exclude>
									<exclude>WEB-INF/jboss-classloading.xml</exclude>
									<exclude>WEB-INF/jboss-web.xml</exclude>
									<exclude>WEB-INF/weblogic.xml</exclude>
								</excludes>
							</resource>
						</webResources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>m2e-tomcat-context</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webResources>
								<resource>
									<directory>src/main/webapp</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/log4j.properties</include>
										<include>WEB-INF/jboss-classloading.xml</include>
										<include>WEB-INF/jboss-web.xml</include>
										<include>WEB-INF/weblogic.xml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/webapp</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/log4j.properties</exclude>
										<exclude>WEB-INF/jboss-classloading.xml</exclude>
										<exclude>WEB-INF/jboss-web.xml</exclude>
										<exclude>WEB-INF/weblogic.xml</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/tomcat</directory>
									<filtering>true</filtering>
									<includes>
										<inclue>context.xml</inclue>
									</includes>
									<targetPath>META-INF</targetPath>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- We need to pass both the build-server-repositories and build-server-properties profiles explicitly to the maven-invoker-plugin, but it's sufficient to just do that if the -repositories profile is activated -->
			<id>build-server-repositories</id>
			<properties>
				<archetype-goal>deploy</archetype-goal>
				<archetype-invoker-build-server-profile-1>build-server-repositories</archetype-invoker-build-server-profile-1>
				<archetype-invoker-build-server-profile-2>build-server-properties</archetype-invoker-build-server-profile-2>
				<archetype-invoker-snapshot-repository-id>${env.SNAPSHOT_REPOSITORY_ID}</archetype-invoker-snapshot-repository-id>
				<archetype-invoker-release-repository-id>${env.RELEASE_REPOSITORY_ID}</archetype-invoker-release-repository-id>
			</properties>
		</profile>

		<profile>
			<id>with-archetypes</id>
			<properties>
				<archetype.dir>${project.build.directory}/generated-sources/archetype</archetype.dir>
				<archetype.pack.dir>${project.build.directory}/archetype-temp/unpack</archetype.pack.dir>
				<archetype.filtered.dir>${project.build.directory}/archetype-temp/filtered</archetype.filtered.dir>
			</properties>
			<dependencies>
				<dependency>
					<!-- A dependency on archetype-resources is required for unpack-archetype-resources to be able to find it from within the same reactor. -->
					<groupId>com.elasticpath</groupId>
					<artifactId>archetype-resources</artifactId>
					<version>${project.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-archetype-resources</id>
								<goals>
									<goal>unpack</goal>
								</goals>
								<phase>process-resources</phase>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.elasticpath</groupId>
											<artifactId>archetype-resources</artifactId>
											<version>${project.version}</version>
											<overWrite>true</overWrite>
											<outputDirectory>${archetype.pack.dir}</outputDirectory>
										</artifactItem>
									</artifactItems>
									<excludes>**/META-INF/**</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>execute</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<source>${archetype.pack.dir}/FindGrandparentVersion.groovy</source>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>create-archetype</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<target>
										<ant antfile="${archetype.pack.dir}/create-archetype.xml">
											<property name="archetype.work.dir" value="${archetype.pack.dir}" />
											<property name="archetype.dir" value="${archetype.filtered.dir}" />
										</ant>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-invoker-plugin</artifactId>
						<executions>
							<execution>
								<id>invoke-archetype-install</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>${archetype-goal}</phase>
								<configuration>
									<pom>${archetype.filtered.dir}/pom.xml</pom>
									<goals>
										<goal>${archetype-goal}</goal>
									</goals>
									<streamLogs>true</streamLogs>
									<cloneProjectsTo>${archetype.dir}</cloneProjectsTo>

									<!-- False is the default, but this option reads ${maven.test.failure.ignore} which is set by the build-server profile, so we need to explicitly set it to false here. -->
									<ignoreFailures>false</ignoreFailures>

									<!-- The invoker plugin doesn't pass along profiles activated from the command line, so we have to activate the build-server profile, if it's active, for deployment to work -->
									<profiles>
										<profile>${archetype-invoker-build-server-profile-1}</profile>
										<profile>${archetype-invoker-build-server-profile-2}</profile>
									</profiles>

									<!-- The invoker plugin doesn't pass along properties set on the command line, so we have to pass these properties along explicitly. -->
									<properties>
										<env.SNAPSHOT_REPOSITORY_ID>${archetype-invoker-snapshot-repository-id}</env.SNAPSHOT_REPOSITORY_ID>
										<env.RELEASE_REPOSITORY_ID>${archetype-invoker-release-repository-id}</env.RELEASE_REPOSITORY_ID>
									</properties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>with-tomcat-war</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<ep.storefront.port.http>${ep.storefront.tomcat.port.http}</ep.storefront.port.http>
				<ep.storefront.port.https>${ep.storefront.tomcat.port.https}</ep.storefront.port.https>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>create-tomcat-context-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>src/tomcat</directory>
											<filtering>true</filtering>
											<includes>
												<include>context.xml</include>
											</includes>
										</resource>
										<resource>
											<directory>src/tomcat</directory>
											<filtering>false</filtering>
											<includes>
												<include>keystore</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/tomcatconf</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- run "keytool:genkey" to regenerate the keystore -->
						<!-- Failing? Delete the keystore file first. -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>keytool-maven-plugin</artifactId>
						<configuration>
							<keystore>src/tomcat/keystore</keystore>
							<dname>cn=demo.elasticpath.com</dname>
							<keypass>changeit</keypass>
							<storepass>changeit</storepass>
							<alias>tomcat</alias>
							<keyalg>RSA</keyalg>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>with-jboss-war</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<classifier>jboss</classifier>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<ep.storefront.port.http>${ep.storefront.jboss.port.http}</ep.storefront.port.http>
				<ep.storefront.port.https>${ep.storefront.jboss.port.https}</ep.storefront.port.https>
			</properties>
			<dependencies>
				<dependency>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>stax</groupId>
					<artifactId>stax-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>stax</groupId>
					<artifactId>stax</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.xml</groupId>
					<artifactId>stax-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.xml.stream</groupId>
					<artifactId>stax-api</artifactId>
					<version>1.0-2</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>xerces</groupId>
					<artifactId>xercesImpl</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>xerces</groupId>
					<artifactId>xmlParserAPIs</artifactId>
					<version>2.6.2</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>with-weblogic-war</id>
			<properties>
				<ep.storefront.port.http>${ep.storefront.weblogic.port.http}</ep.storefront.port.http>
				<ep.storefront.port.https>${ep.storefront.weblogic.port.https}</ep.storefront.port.https>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<classifier>weblogic</classifier>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>with-websphere-war</id>
			<properties>
				<ep.storefront.port.http>${ep.storefront.websphere.port.http}</ep.storefront.port.http>
				<ep.storefront.port.https>${ep.storefront.websphere.port.https}</ep.storefront.port.https>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<classifier>websphere</classifier>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
