package com.elasticpath.test.persister.database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

import org.apache.log4j.Logger;

import com.elasticpath.test.common.exception.DataSourceInitializerException;

/**
 * Oracle implementation of AbstractDataSourceInitializer.
 */
public class OracleDataSourceInitializerImpl extends AbstractDataSourceInitializer {
	private static final Logger LOG = Logger.getLogger(OracleDataSourceInitializerImpl.class);

	private String newUserName;

	/**
	 * Constructor.
	 * @param properties the properties.
	 */
	public OracleDataSourceInitializerImpl(final Properties properties) {
		super(properties);
	}

	/**
	 * This method will drops the existing user and then re-creates user
	 * and oracle automatically drops and then creates schema for the user.
	 * To drop/create the user, the connection should be generated by dbausername and dbapassword.
	 *
	 * @param newDataBaseName the name that will be used in user creation
	 */
	public void dropAndCreateDatabase() {
		LOG.info("Using Oracle database.");
		LOG.info("Resetting the database: " + getDatabaseName());

		Connection conn = null;
		Statement stmnt = null;
		try {
			conn = DriverManager.getConnection(getConnectionUrl(), dbaUsername, dbaPassword);
			stmnt = conn.createStatement();
			try {
				stmnt.execute("drop user " + getDatabaseName() + " cascade");
			} catch (SQLException exception) {
				// do nothing
			}
			stmnt.execute("create user " + getDatabaseName() + " identified by " + password);
			stmnt.execute("grant all privilege to " + getDatabaseName());
		} catch (Exception e) {
			LOG.fatal("Failed to create test database", e);

			throw new DataSourceInitializerException("Failed to create test database", e);
		} finally {
			close(stmnt);
			close(conn);
		}

		try {
			conn = DriverManager.getConnection(getConnectionUrl(), getDatabaseName(), password);

			newUserName = getDatabaseName();
		} catch (Exception e) {
			LOG.fatal("Failed to create test database", e);

			throw new DataSourceInitializerException("Failed to create test database", e);
		} finally {
			close(conn);
		}
	}

	/**
	 * For oracle connection url is the same for all users.
	 *
	 * @param databaseName the name of user that was created in initialize method
	 */
	public String getConnectionUrl() {
		return "jdbc:" + rdbms + ":thin:@" + host + ":" + port + ":" + getDatabaseName();
	}

	/**
	 * Method returns user name for db connection, it equals to databaseName that was created in initialize method.
	 *
	 * @return the user name
	 */
	@Override
	public String getUsername() {
		//if the method "initialize" is not executed, the value of newUserName will be null
		//in this case, the value of username should be returned.
		if (newUserName != null) {
			return newUserName;
		}
		return username;
	}
}
